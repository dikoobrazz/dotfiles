
call plug#begin('~/.vim/plugged')

Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-ragtag'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'kana/vim-textobj-user'
Plug 'kana/vim-textobj-entire'
Plug 'christoomey/vim-system-copy'

" == MarkDown == "
Plug 'tpope/vim-markdown'
Plug 'masukomi/vim-markdown-folding'
" Plug 'suan/vim-instant-markdown', {'for': 'markdown'}
"== end == "

Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'scrooloose/nerdtree'
Plug 'Shougo/unite.vim'
Plug 'Yggdroot/indentLine'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

" Plug 'Shougo/deoplete.nvim'
Plug 'roxma/nvim-yarp'
Plug 'roxma/vim-hug-neovim-rpc'
" Plug 'sheerun/vim-polyglot'

Plug 'ryanoasis/vim-devicons'
Plug 'morhetz/gruvbox'
Plug 'jacoborus/tender.vim'
" == Programming plugins == "
Plug 'mattn/emmet-vim', { 'for': ['html', 'javascript', 'css', 'jsx', 'erb', 'htmldjango']  }
Plug 'yuezk/vim-js'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'othree/yajs.vim'
Plug 'fatih/vim-go' ", { 'do': ':GoUpdateBinaries' }
call plug#end()


" == Base vim settings == "
set nocompatible
set encoding=utf-8
set nrformats=         " переводит вим из восьмиричной систымы в десятичную
set noswapfile
set nobackup
syntax on
set tabstop=2  shiftwidth=2 softtabstop=2 smarttab expandtab smartindent
set ruler
set langmap=ФИСВУАПРШОЛДЬТЩЗЙКЫЕГМЦЧНЯЖ;ABCDEFGHIJKLMNOPQRSTUVWXYZ:,фисвуапршолдьтщзйкыегмцчня;abcdefghijklmnopqrstuvwxyz
filetype plugin indent on
set backspace=indent,eol,start
set hlsearch    " включаем подсветку слов при поиске;
set incsearch   " улучшаем видимость подсветки слов при поиске;
set ignorecase
set smartcase
set showmatch
set gdefault
set cursorline
set t_Co=256
set t_ut=
set wrap
set linebreak
set scrolloff=5
set hidden
set history=10000
set background=dark
" set termguicolors
" == end == "

" == Colorshemes == "
" colorscheme codedark_dev
" colorscheme dracula
" colorscheme orbital
" colorscheme paramount-new
colorscheme hybrid_reverse
" colorscheme minimalist
" colorscheme OceanicNext
" colorscheme farout
" colorscheme mypaper
" colorscheme tender
" colorscheme nord

let g:gruvbox_contrast_dark='hard'
" colorscheme gruvbox

let g:molokai_original = 1

highlight NonText guifg=bg
highlight Comment cterm=italic gui=italic

" highlight NonText ctermbg=bg
" highlight NonText ctermfg=bg
highlight NonText guibg=bg
highlight NonText guifg=bg
" == end == "

" set mouse=a
let g:mapleader=","


" == Line number settings == "
set number relativenumber
augroup numbertoggle
  autocmd!
  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
augroup END
" == end == "

" Перереопределяем клавиши j k для лучшего перехода по переносимым строкам
noremap j gj
noremap k gk

" == Jump to windows == "
nmap <C-J> <C-W><C-J> " ctrl-j (вместо ctrl-W-J)
nmap <C-K> <C-W><C-K> " ctrl-K (вместо ctrl-W-K)
nmap <C-H> <C-W><C-H> " ctrl-H (вместо ctrl-W-H)
nmap <C-L> <C-W><C-L> " ctrl-L (вместо ctrl-W-L)
" == end == "

" Разбить окно по вертикали
"nnoremap <leader>w <C-w>v<C-w>l
nnoremap <leader>w :rightb vnew<cr>

" Find and replace based on word under cursor
nnoremap <Leader>s :%s/\<<C-r><C-w>\>//g<Left><Left>

" Change cursor view
let &t_SI.="\e[5 q" "SI = INSERT mode
let &t_SR.="\e[4 q" "SR = REPLACE mode
let &t_EI.="\e[1 q" "EI = NORMAL mode (ELSE)

" Открыть vimrc в окне справа
nnoremap <leader>v <C-w><C-v><C-l>:e $MYVIMRC<cr>

" == Search settings == "
" Fzf search keymap
nmap fb :Buffers<cr>
nmap ff :Files<cr>
nmap fc :Colors<cr>

" Для лучшего поиска по фаилам и катологам с помощью :find
" А так же для поиска по буферам :b
set path+=**
set wildmenu

" C-tags Создает фал tags. Можно найти определение ф-ции в проекте
" Перед использованием в консоли vim :!ctags -R .
" USe Ctrl+] to jump to tag under cursor
" USe g+Ctrl+] for ambiguous tag
" USe Ctrl+t to jump back up the tag stack
command! MakeTags !ctags -R .
" == end == "

" == FILE BROWSING SETTINGS =="

" NerdTree Setting "
map <leader>f :NERDTreeToggle<cr>
let NERDTreeQuitOnOpen = 1
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
""let g:NERDTreeStatusline = '%#NonText#'

" netrw settings "
autocmd FileType netrw setl bufhidden=delete
let g:netrw_banner=1        " disable annoying banner
" let g:netrw_browse_split=4  " open in previous window
let g:netrw_altv=1          " open splits to the right
let g:netrw_liststyle=3     " tree view
let g:netrw_list_hide=',\(^\|\s\s\)\zs\.\S\+'
let g:netrw_winsize=15
let g:netrw_hide=1
" nmap <leader>f :Explore .<cr>

" == vimwiki settings = " 
nnoremap <cr> gf
nnoremap <backspace> <c-o>
" == end == " 

" == Markdown Settings == " 
let g:polyglot_disabled = ['markdown']
let g:markdown_fenced_languages = ['css', 'erb=eruby', 'javascript', 'js=javascript', 'json=javascript', 'ruby', 'sass', 'xml']
" == end == "

"== Indent char settings == " 
let g:indentLine_char_list = ['│', '│', '│', '│', '│']
" == end == "

" == Deoplete == "
let g:deoplete#enable_at_startup = 1
" == end == "

" ==V fzf-vim color settings == "

let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-s': 'split',
  \ 'ctrl-v': 'vsplit' }
let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'Type'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Character'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

" == end == "

" == Emmet settings == "
let g:user__install_global = 0
let g:user_emmet_leader_key=','
autocmd BufNewFile,BufRead *.html.erb set filetype=html
autocmd FileType html,css,scss,erb,less,jsx,js EmmetInstall
let g:user_emmet_expandabbr_key='<F4>'
let g:user_emmet_settings = {
      \  'javascript' : {
      \      'extends' : 'jsx',
      \  },
      \}
" == end == "


" == AirLine settings == "
" let g:airline_theme='sol'
" let g:airline_theme='murmur'
" let g:airline_theme='deus'
" let g:airline_theme='luna'
" let g:airline_theme='violet'
let g:airline_theme='nord_minimal'
" let g:airline_theme='base16_nord'
" let g:airline_theme='base16_ocean'
" let g:airline_powerline_fonts = 1
" == end == "

" == VimViki ==
" let g:vimwiki_list = [{'path': '~/Документы/vimwiki/index.wiki'}]


